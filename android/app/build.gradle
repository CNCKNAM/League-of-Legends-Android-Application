apply plugin: 'com.android.application'
apply plugin: 'de.undercouch.download'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/DEPENDENCIES'
    }

    defaultConfig {
        applicationId "org.tensorflow.lite.examples.detection"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        ndk {
//            abiFilters 'armeabi-v7a', 'arm64-v8a'
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    lintOptions {
        abortOnError false
    }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
//apply from: "download_model.gradle"

apply from: 'download_model.gradle'
apply plugin: 'com.google.gms.google-services'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
//    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
//    implementation 'org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly'
    implementation 'org.tensorflow:tensorflow-lite:2.2.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.2.0'
//    implementation 'org.tensorflow:tensorflow-lite:0.0.0-gpu-experimental'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.firebase:firebase-auth:20.0.3'
    implementation 'com.google.firebase:firebase-database:19.7.0'
    implementation 'com.google.firebase:firebase-storage:19.2.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    //biometric sensor
    implementation  'androidx.biometric:biometric:1.0.1'
    //import AR
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.15.0'
    implementation 'com.google.ar.sceneform:assets:1.15.0'
    //import database

    //dialogflow
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.cloud:google-cloud-dialogflow:2.1.0'
    implementation 'io.grpc:grpc-okhttp:1.30.0'

    //socket io
    implementation 'com.github.nkzawa:socket.io-client:0.3.0'
    //tool bar
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    //crop image
    api 'com.theartofdev.edmodo:android-image-cropper:2.8.+'
    //vr
    implementation 'com.google.vr:sdk-audio:1.10.0'
    implementation 'com.google.vr:sdk-base:1.10.0'
    implementation 'com.google.vr:sdk-common:1.10.0'
    implementation 'com.google.vr:sdk-commonwidget:1.10.0'
    implementation 'com.google.vr:sdk-panowidget:1.10.0'
    implementation 'com.google.vr:sdk-videowidget:1.10.0'

    //face detect register
    implementation 'com.google.android.gms:play-services-vision:19.0.0'

    //image classification
    implementation('org.tensorflow:tensorflow-lite:0.0.0-nightly') { changing = true }
    implementation('org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly') { changing = true }
    implementation('org.tensorflow:tensorflow-lite-support:0.0.0-nightly') { changing = true }

    //ocr

    //advertisemtn
    implementation 'com.google.android.gms:play-services-ads:20.1.0'

}
